export declare function generateRawSubChannel(params?: Partial<Amity.RawSubChannel>): Amity.RawSubChannel;
export declare const convertSubChannelFromRaw: (subChannel: Amity.RawSubChannel) => Amity.SubChannel;
export declare function generateSubChannel(params?: Record<string, any>): Amity.SubChannel;
export declare function generateRawMessagePreviewSubChannel(params: Partial<Amity.SubChannelMessagePreviewPayload>): {
    channelId: Amity.RawSubChannel["channelId"];
    channelPublicId: Amity.RawSubChannel["channelPublicId"];
    channelType: string;
    childCount: number;
    creatorId: string;
    creatorPublicId: string;
    data: string | Record<string, unknown> | Amity.ContentDataText | Amity.ContentDataFile | Amity.ContentDataVideo | Amity.ContentDataPoll;
    dataType: any;
    isDeleted: boolean;
    mentionedUsers?: Amity.Message["mentionees"];
    messageFeedId: Amity.RawSubChannel["messageFeedId"];
    messageId: Amity.RawMessage["messageId"];
    parentId: string;
    path: string;
    segment: Amity.RawMessage["segment"];
    dataTypes?: any[];
    flagCount: number;
    hashFlag?: {
        bits: number;
        hashes: number;
        hash: string;
    } | null;
    tags?: string[];
    createdAt: Amity.timestamp;
    updatedAt: Amity.timestamp;
    hashFlagged: any;
    reactionCount: number;
};
